{"version":3,"sources":["api/api.ts","components/PeopleContext/PeopleContextProvider.tsx","components/Layout/Layout.tsx","pages/HomePage/HomePage.tsx","components/PersonName/PersonName.tsx","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage/PeoplePage.tsx","pages/NewPerson/NewPerson.tsx","App.tsx","index.tsx"],"names":["getPeople","url","fetch","then","response","ok","Error","status","statusText","json","PeopleContext","React","createContext","people","setPeople","PeopleContextProvider","children","useState","useEffect","contextValue","Provider","value","Layout","className","to","HomePage","PersonName","person","personId","useParams","search","useLocation","selector","slug","smooth","scrollOptions","block","pathname","style","color","sex","name","PersonRow","sortBy","useContext","isHovered","setIsHovered","id","display","justifyContent","onMouseOver","onMouseLeave","onFocus","onBlur","type","onClick","filter","item","born","died","mother","motherName","father","fatherName","PeopleTable","useSearchParams","searchParams","setSearchParams","query","get","sortOrder","preparedPeople","map","find","fatherObj","motherObj","sortedPeople","sort","x","y","localeCompare","header","classnames","toLowerCase","event","sortColumnName","currentTarget","textContent","params","handleSortParams","PeoplePage","appliedQuery","setQuery","applyQuery","useCallback","f","delay","timer","clearTimeout","args","setTimeout","debounce","newQuery","filteredPeople","includes","onChange","target","length","NewPerson","navigate","useNavigate","men","women","nameInit","sexInit","bornInit","diedInit","formFields","setFormFields","bornMin","bornMax","diedMin","diedMax","bornDied","lifeExpectancy","requiredFieldName","requiredFieldSex","requiredFieldBorn","requiredFieldDied","canSubmit","isError","setIsError","alerts","Date","getFullYear","lifeExpectancyMax","requiredField","handleChange","match","aliveWomen","woman","aliveMen","man","onSubmit","preventDefault","newPerson","trim","split","join","concat","htmlFor","autoComplete","classNames","checked","min","disabled","margin","App","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77b547e0.chunk.js","sourcesContent":["const BASE_URL = 'https://mate-academy.github.io/react_people-table/api';\n\nconst request = (url: string) => {\n  return fetch(`${BASE_URL}${url}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nexport const getPeople = () => {\n  return request('/people.json');\n};\n","import React, { useState, useEffect } from 'react';\nimport { getPeople } from '../../api/api';\n\ntype ContextProps = {\n  people: Person[],\n  setPeople: CallableFunction,\n};\n\nexport const PeopleContext = React.createContext<ContextProps>({\n  people: [],\n  setPeople: () => {},\n});\n\nexport const PeopleContextProvider: React.FC = ({ children }) => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    getPeople().then(setPeople);\n  }, []);\n\n  const contextValue = {\n    people,\n    setPeople,\n  };\n\n  return (\n    <PeopleContext.Provider value={contextValue}>\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n","import React from 'react';\nimport { Outlet, NavLink } from 'react-router-dom';\n\nexport const Layout: React.FC = () => {\n  return (\n    <>\n      <header className=\"header\">\n        <div className=\"container is-fluid\">\n          <nav className=\"tabs\">\n            <ul>\n              <li className=\"nav-item\">\n                <NavLink to=\"/\">Home</NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink to=\"/people\">People</NavLink>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      </header>\n\n      <section className=\"section\">\n        <div className=\"container is-fluid\">\n          <Outlet />\n        </div>\n      </section>\n\n      <footer className=\"footer\">\n        <h2>Made in Ukraine @ 2022</h2>\n      </footer>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <h1>\n      Welcome to the advanced people task\n    </h1>\n  );\n};\n","import React from 'react';\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport ScrollIntoView from 'react-scroll-into-view';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonName: React.FC<Props> = ({ person }) => {\n  const { personId } = useParams();\n  const { search } = useLocation();\n\n  return (\n    <ScrollIntoView\n      selector={`#${person.slug}`}\n      smooth\n      scrollOptions={{\n        block: 'center',\n      }}\n    >\n      <Link\n        to={\n          personId === person.slug\n            ? { pathname: '/people', search }\n            : { pathname: `/people/${person.slug}`, search }\n        }\n        style={\n          {\n            color: person.sex === 'm'\n              ? 'rgb(0, 71, 171)' : 'rgb(255, 0, 0)',\n          }\n        }\n      >\n        {person.name}\n      </Link>\n    </ScrollIntoView>\n  );\n};\n","import React, { useState, useContext } from 'react';\nimport { PeopleContext } from '../PeopleContext';\nimport { PersonName } from '../PersonName';\n\nimport './PersonRow.scss';\n\ntype Props = {\n  person: Person,\n  sortBy: string,\n};\n\nexport const PersonRow: React.FC<Props> = ({ person, sortBy }) => {\n  const { people, setPeople } = useContext(PeopleContext);\n  const [isHovered, setIsHovered] = useState(false);\n\n  return (\n    <>\n      <td\n        id={`${person.slug}`}\n        className={sortBy === 'name' ? 'sorted-cell cell' : 'cell'}\n        style={{ display: 'flex', justifyContent: 'space-between' }}\n        onMouseOver={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n        onFocus={() => setIsHovered(true)}\n        onBlur={() => setIsHovered(false)}\n      >\n        <PersonName person={person} />\n        {isHovered && (\n          <div className=\"deleteUser\">\n            <button\n              type=\"button\"\n              className=\"deleteButton\"\n              onClick={() => {\n                setPeople(\n                  people.filter(item => item.slug !== person.slug),\n                );\n              }}\n            >\n              X\n            </button>\n          </div>\n        )}\n      </td>\n      <td\n        className={sortBy === 'sex' ? 'sorted-cell' : ''}\n      >\n        {person.sex === 'm' ? 'Male' : 'Female '}\n      </td>\n      <td\n        className={sortBy === 'born' ? 'sorted-cell' : ''}\n      >\n        {person.born}\n      </td>\n      <td\n        className={sortBy === 'died' ? 'sorted-cell' : ''}\n      >\n        {person.died}\n      </td>\n      <td>\n        {person.mother ? (\n          <PersonName person={person.mother} />\n        ) : (\n          <b>{person.motherName}</b>\n        )}\n        {!person.motherName && '-'}\n      </td>\n      <td>\n        {person.father ? (\n          <PersonName person={person.father} />\n        ) : (\n          <b>{person.fatherName}</b>\n        )}\n        {!person.fatherName && '-'}\n      </td>\n    </>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { PersonRow } from '../PersonRow';\n\nimport './PeopleTable.scss';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { personId } = useParams();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const sortBy = searchParams.get('sortBy') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n  const headerSortColumns = ['Name', 'Sex', 'Born', 'Died'];\n  const preparedPeople = people.map(person => {\n    const father = people\n      .find(\n        fatherObj => fatherObj.name === person.fatherName,\n      );\n\n    const mother = people\n      .find(\n        motherObj => motherObj.name === person.motherName,\n      );\n\n    return { ...person, mother, father };\n  });\n\n  const handleSortParams = (event: React.MouseEvent) => {\n    const sortColumnName\n      = event.currentTarget.textContent?.toLowerCase();\n\n    const params: {\n      [key: string] : string,\n    } = {};\n\n    if (query) {\n      params.query = query;\n    }\n\n    if (sortColumnName && sortBy !== sortColumnName) {\n      params.sortBy = sortColumnName;\n      params.sortOrder = 'asc';\n    } else if (sortColumnName && sortOrder === 'asc') {\n      params.sortBy = sortColumnName;\n      params.sortOrder = 'desc';\n    } else if (sortColumnName && sortOrder === 'desc') {\n      params.sortBy = sortColumnName;\n      params.sortOrder = 'asc';\n    }\n\n    setSearchParams(params);\n  };\n\n  const sortedPeople = sortBy\n    ? preparedPeople.sort((x: Person, y: Person) => {\n      switch (sortBy) {\n        case 'name':\n        case 'sex':\n          if (sortOrder === 'asc') {\n            return (x[sortBy]).localeCompare(y[sortBy]);\n          }\n\n          return (y[sortBy]).localeCompare(x[sortBy]);\n\n        case 'born':\n        case 'died':\n          if (sortOrder === 'asc') {\n            return +(x[sortBy]) - +(y[sortBy]);\n          }\n\n          return +(y[sortBy]) - +(x[sortBy]);\n\n        default:\n          return 0;\n      }\n    })\n    : preparedPeople;\n\n  return (\n    <table className=\"table is-bordered is-fullwidth\">\n      <thead>\n        <tr>\n          {headerSortColumns.map(header => (\n            <th\n              key={header}\n              className={classnames(\n                'sorted-column',\n                {\n                  'sorted-column__asc': sortBy === header.toLowerCase()\n                  && sortOrder === 'asc',\n                  'sorted-column__desc': sortBy === header.toLowerCase()\n                  && sortOrder === 'desc',\n                },\n              )}\n              onClick={(event) => {\n                handleSortParams(event);\n              }}\n            >\n              {header}\n            </th>\n          ))}\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n      <tbody>\n        {sortedPeople.map(person => {\n          return (\n            <tr\n              key={person.slug}\n              className={classnames(\n                { 'is-selected': personId === person.slug },\n              )}\n            >\n              <PersonRow person={person} sortBy={sortBy} />\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState, useContext, useCallback } from 'react';\nimport { useSearchParams, useParams, Link } from 'react-router-dom';\nimport { PeopleContext } from '../../components/PeopleContext';\nimport { PeopleTable } from '../../components/PeopleTable';\nimport './PeoplePage.scss';\n\nexport const PeoplePage: React.FC = () => {\n  const { personId } = useParams();\n  const { people } = useContext(PeopleContext);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const appliedQuery = searchParams.get('query') || '';\n  const sortBy = searchParams.get('sortBy') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n\n  const [query, setQuery] = useState(appliedQuery);\n\n  const debounce = (f: (query: string) => void, delay: number) => {\n    let timer: number;\n\n    return (...args: string[]) => {\n      clearTimeout(timer);\n      timer = setTimeout(f, delay, ...args);\n    };\n  };\n\n  const applyQuery = useCallback(\n    debounce((newQuery: string) => {\n      const params: { [key: string]: string } = {};\n\n      if (newQuery) {\n        params.query = newQuery;\n      }\n\n      if (sortBy) {\n        params.sortBy = sortBy;\n      }\n\n      if (sortOrder) {\n        params.sortOrder = sortOrder;\n      }\n\n      return setSearchParams(params);\n    }, 800), [personId, sortBy, sortOrder],\n  );\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    applyQuery(event.target.value);\n  };\n\n  const filteredPeople = query\n    ? people.filter(person => {\n      const { name, motherName, fatherName } = person;\n\n      return name.toLowerCase().includes(appliedQuery)\n      || (motherName?.toLowerCase().includes(appliedQuery))\n      || (fatherName?.toLowerCase().includes(appliedQuery));\n    })\n    : people;\n\n  return (\n    <>\n      <div className=\"field\">\n        <p className=\"control has-icons-left\">\n          <input\n            type=\"text\"\n            className=\"input\"\n            value={query}\n            onChange={handleChange}\n            data-cy=\"filterInput\"\n          />\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-search\" />\n          </span>\n        </p>\n\n        <div className=\"button-box\">\n          <Link\n            to=\"/people/new\"\n            className=\"button is-primary level\"\n          >\n            Add new person\n          </Link>\n        </div>\n\n      </div>\n\n      {people.length > 0 && <PeopleTable people={filteredPeople} />}\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { PeopleContext } from '../../components/PeopleContext';\nimport './NewPerson.scss';\n\nexport const NewPerson = () => {\n  const { people, setPeople } = useContext(PeopleContext);\n  const navigate = useNavigate();\n  const men = people.filter(person => person.sex === 'm');\n  const women = people.filter(person => person.sex === 'f');\n\n  const [formFields, setFormFields] = useState<FormFields>({\n    name: '',\n    nameInit: false,\n    sex: '',\n    sexInit: false,\n    born: '',\n    bornInit: false,\n    died: '',\n    diedInit: false,\n    motherName: 'default',\n    fatherName: 'default',\n    mother: null,\n    father: null,\n  });\n\n  const [isError, setIsError] = useState({\n    bornMin: false,\n    bornMax: false,\n    diedMin: false,\n    diedMax: false,\n    bornDied: false,\n    lifeExpectancy: false,\n    requiredFieldName: false,\n    requiredFieldSex: false,\n    requiredFieldBorn: false,\n    requiredFieldDied: false,\n    canSubmit: false,\n  });\n\n  const alerts = {\n    bornMin: 'The birth year cannot be less than 1400',\n    bornMax: 'The birth year cannot be more than current year',\n    diedMin: `Mininum death year is ${formFields.born}`,\n    diedMax: `Maximum died year is ${new Date().getFullYear()}`,\n    bornDied: 'Death cannot happen before birth',\n    lifeExpectancyMax: 'Life expectancy shouldn\\'t be more that 150 years',\n    requiredField: 'This field is required',\n  };\n\n  useEffect(() => {\n    const {\n      name,\n      nameInit,\n      sex,\n      sexInit,\n      born,\n      bornInit,\n      died,\n      diedInit,\n    } = formFields;\n\n    setIsError({\n      ...isError,\n      bornMin: !!(+born < 1400 && bornInit),\n      bornMax: +born > new Date().getFullYear(),\n      diedMin: !!((+born > +died) && diedInit),\n      diedMax: +died > new Date().getFullYear(),\n      bornDied: +died < +born,\n      lifeExpectancy: !!((+died - +born > 150) && bornInit),\n      requiredFieldName: !!(name === '' && nameInit),\n      requiredFieldSex: !!(sex === '' && sexInit),\n      requiredFieldBorn: !!(bornInit && +born === 0),\n      requiredFieldDied: !!(diedInit && +died === 0),\n    });\n  }, [formFields.born, formFields.died, formFields.name, formFields.sex]);\n\n  const handleChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'born':\n      case 'died':\n        return setFormFields({ ...formFields, [name]: +value });\n\n      case 'name':\n        return value.match(/^[a-zA-Z\\s]*$/g)\n        && setFormFields({ ...formFields, [name]: value });\n\n      default:\n        return setFormFields({ ...formFields, [name]: value });\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    const slug = formFields.name\n      .trim()\n      .toLowerCase()\n      .split(' ')\n      .join('-')\n      .concat(`-${formFields.born}`);\n\n    const newPerson = {\n      slug,\n      name: formFields.name.trim(),\n      sex: formFields.sex,\n      born: +formFields.born,\n      died: +formFields.died,\n      motherName: formFields.motherName === 'default'\n        ? null : formFields.motherName,\n      fatherName: formFields.fatherName === 'default'\n        ? null : formFields.fatherName,\n      mother: people.find(\n        person => person.name === formFields.motherName,\n      ) || null,\n      father: people.find(\n        person => person.name === formFields.fatherName,\n      ) || null,\n    };\n\n    if (\n      newPerson.name === ''\n        || newPerson.sex === ''\n        || newPerson.born === 0\n        || newPerson.died > new Date().getFullYear()\n        || +newPerson.died - +newPerson.born > 150\n    ) {\n      setFormFields({\n        ...formFields,\n        nameInit: true,\n        sexInit: true,\n        diedInit: true,\n      });\n\n      setIsError({\n        ...isError,\n        bornMin: newPerson.born < 1400,\n        lifeExpectancy: +newPerson.died - +newPerson.born > 150,\n        requiredFieldName: newPerson.name === '',\n        requiredFieldSex: newPerson.sex === '',\n        requiredFieldBorn: !!(newPerson.born === 0\n          && !formFields.bornInit),\n        requiredFieldDied: newPerson.sex === '',\n      });\n    } else {\n      setPeople([...people, newPerson]);\n      navigate('/people/');\n    }\n  };\n\n  const aliveWomen = women.filter(\n    woman => {\n      return +formFields.born > woman.born;\n    },\n  );\n\n  const aliveMen = men.filter(\n    man => {\n      return +formFields.born > man.born;\n    },\n  );\n\n  return (\n    <div className=\"box\">\n      <form className=\"form\" onSubmit={handleSubmit}>\n\n        <div className=\"field is-horizontal\">\n\n          <div className=\"field-label is-normal\">\n            <label className=\"label\" htmlFor=\"name\">Name</label>\n          </div>\n\n          <div className=\"field-body\">\n            <div className=\"field is-narrow\">\n              <div className=\"control\">\n                <input\n                  id=\"name\"\n                  autoComplete=\"off\"\n                  className={classNames(\n                    'input',\n                    'is-small',\n                    { 'is-danger': isError.requiredFieldName },\n                  )}\n                  type=\"text\"\n                  name=\"name\"\n                  value={formFields.name}\n                  onChange={(event) => {\n                    setIsError({ ...isError, requiredFieldName: false });\n                    handleChange(event);\n                  }}\n                  onFocus={() => {\n                    return setIsError({ ...isError, requiredFieldName: false });\n                  }}\n                  onBlur={() => {\n                    return formFields.name.length === 0\n                    && setIsError({ ...isError, requiredFieldName: true });\n                  }}\n                />\n                {isError.requiredFieldName && formFields.nameInit && (\n                  <p className=\"help is-danger\">\n                    {alerts.requiredField}\n                  </p>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"field-label is-narrow\">\n            <label className=\"label\" htmlFor=\"sex\">Sex</label>\n          </div>\n\n          <div className=\"field-body\">\n            <div className=\"field\">\n              <div className=\"control\">\n                <label className=\"radio\">\n                  <input\n                    id=\"sex\"\n                    type=\"radio\"\n                    name=\"sex\"\n                    value=\"m\"\n                    checked={formFields.sex === 'm'}\n                    onFocus={() => {\n                      setFormFields({ ...formFields, sexInit: true });\n                    }}\n                    onChange={handleChange}\n                  />\n                  Male\n                </label>\n                <label className=\"radio\">\n                  <input\n                    type=\"radio\"\n                    name=\"sex\"\n                    value=\"f\"\n                    checked={formFields.sex === 'f'}\n                    onFocus={() => {\n                      setFormFields({ ...formFields, sexInit: true });\n                    }}\n                    onChange={handleChange}\n                  />\n                  Female\n                </label>\n                {isError.requiredFieldSex && (\n                  <p className=\"help is-danger\">\n                    {alerts.requiredField}\n                  </p>\n                )}\n              </div>\n            </div>\n          </div>\n\n        </div>\n\n        <div className=\"field is-horizontal\">\n\n          <div className=\"field-label is-normal\">\n            <label className=\"label\" htmlFor=\"born\">Born</label>\n          </div>\n\n          <div className=\"field-body\">\n            <div className=\"field is-narrow\">\n              <div className=\"control\">\n                <input\n                  id=\"born\"\n                  autoComplete=\"off\"\n                  className=\"input is-small\"\n                  type=\"number\"\n                  min=\"0\"\n                  name=\"born\"\n                  value={formFields.born}\n                  onChange={event => {\n                    handleChange(event);\n                    setIsError({ ...isError, requiredFieldDied: false });\n                  }}\n                  onFocus={() => {\n                    setIsError({\n                      ...isError,\n                      requiredFieldBorn: false,\n                    });\n\n                    setFormFields({ ...formFields, bornInit: true });\n                  }}\n                  onBlur={() => {\n                    return (formFields.born === 0 || formFields.born === '')\n                    && setIsError({ ...isError, requiredFieldBorn: true });\n                  }}\n                />\n                {isError.requiredFieldBorn && !formFields.bornInit && (\n                  <p className=\"help is-danger\">\n                    {alerts.requiredField}\n                  </p>\n                )}\n                {isError.bornMin && formFields.bornInit && (\n                  <p className=\"help is-danger\">\n                    {alerts.bornMin}\n                  </p>\n                )}\n                {isError.bornMax && formFields.bornInit && (\n                  <p className=\"help is-danger\">\n                    {alerts.bornMax}\n                  </p>\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"field-label is-normal\">\n            <label className=\"label\" htmlFor=\"died\">Died</label>\n          </div>\n\n          <div className=\"field-body\">\n            <div className=\"field is-narrow\">\n              <div className=\"control\">\n                <input\n                  id=\"died\"\n                  autoComplete=\"off\"\n                  className=\"input is-small\"\n                  type=\"number\"\n                  name=\"died\"\n                  disabled={!formFields.born}\n                  value={formFields.died}\n                  onChange={handleChange}\n                  onFocus={() => {\n                    setIsError({ ...isError, requiredFieldDied: false });\n                    setFormFields({ ...formFields, diedInit: true });\n                  }}\n                  onBlur={() => {\n                    return (formFields.died === 0 || formFields.died === '')\n                    && setIsError({ ...isError, requiredFieldDied: true });\n                  }}\n                />\n                {isError.requiredFieldDied && formFields.diedInit && (\n                  <p className=\"help is-danger\">\n                    {alerts.requiredField}\n                  </p>\n                )}\n                {isError.diedMin && (\n                  <p className=\"help is-danger\">\n                    {alerts.diedMin}\n                  </p>\n                )}\n                {isError.diedMax && (\n                  <p className=\"help is-danger\">\n                    {alerts.diedMax}\n                  </p>\n                )}\n                {isError.lifeExpectancy && (\n                  <p className=\"help is-danger\">\n                    {alerts.lifeExpectancyMax}\n                  </p>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <div className=\"select\">\n              <select\n                name=\"motherName\"\n                value={formFields.motherName}\n                onChange={handleChange}\n                disabled={!formFields.born}\n              >\n                <option disabled value=\"default\">Select mother</option>\n                {aliveWomen.map(woman => (\n                  <option\n                    key={woman.slug}\n                    value={woman.name}\n                  >\n                    {woman.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n          <div className=\"control\">\n            <div className=\"select\">\n              <select\n                value={formFields.fatherName}\n                name=\"fatherName\"\n                onChange={(event) => {\n                  handleChange(event);\n                }}\n                disabled={!formFields.born}\n              >\n                <option disabled value=\"default\">Select father</option>\n                {aliveMen.map(man => (\n                  <option\n                    key={man.slug}\n                    value={man.name}\n                  >\n                    {man.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <div\n          className=\"control\"\n          style={{ margin: '0 auto' }}\n        >\n          <input\n            // disabled={true}\n            className=\"button is-primary\"\n            type=\"submit\"\n            value=\"Submit\"\n          />\n        </div>\n\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { PeopleContextProvider } from './components/PeopleContext';\nimport { Layout } from './components/Layout';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NewPerson } from './pages/NewPerson';\n\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  return (\n    <PeopleContextProvider>\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route path=\":personId\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"/people/new\" element={<NewPerson />} />\n        </Route>\n      </Routes>\n    </PeopleContextProvider>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport 'bulma';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}